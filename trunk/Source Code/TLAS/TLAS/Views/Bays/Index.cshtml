@model PagedList.IPagedList<TLAS.Models.Bay>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
@{
    ViewBag.Title = "Bay";
}
<hr />
<div class="container">
    <div class="col-md-6">
        <h2>Bays</h2>
        <div class="table-responsive">
            @using (Html.BeginForm("Index", "Bays", FormMethod.Get))
            { <p>
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control", @title = "Search By Bay ID", @placeholder = "Bay ID" })
                        </div>
                        <div class="col-md-1" style="margin-left:-23px;">
                            <input type="submit" value="Search" class="btn btn-primary" />
                        </div>
                    </div>

                </div>

            </p>
            }
            <table class="table table-condensed table-bordered table-hover table-striped">
                <thead>
                    <tr class="btn-default">
                        <th><b>@Html.ActionLink("Bay No", "Index", new { sortOrder = ViewBag.IdSortParm, currentFilter = ViewBag.CurrentFilter })</b></th>

                        <th><b>@Html.ActionLink("Product Name", "Index", new { sortOrder = ViewBag.PrdNameSortParm, currentFilter = ViewBag.CurrentFilter })</b></th>
                        <th><b>@Html.ActionLink("Frequency", "Index", new { sortOrder = ViewBag.FrequencySortParm, currentFilter = ViewBag.CurrentFilter })</b></th>
                        <th><b>@Html.ActionLink("Queue", "Index", new { sortOrder = ViewBag.QueueSortParm, currentFilter = ViewBag.CurrentFilter })</b></th>
                        <th><b>@Html.ActionLink("Active", "Index", new { sortOrder = ViewBag.ActiveSortParm, currentFilter = ViewBag.CurrentFilter })</b></th>
                        <th><b>@Html.ActionLink("Modified By", "Index", new { sortOrder = ViewBag.ModifiedBySortParm, currentFilter = ViewBag.CurrentFilter })</b></th>
                        <th><b>@Html.ActionLink("Modified Date", "Index", new { sortOrder = ViewBag.ModifiedDateSortParm, currentFilter = ViewBag.CurrentFilter })</b></th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        var rowV = Convert.ToBase64String(item.RowVersion);
                        <tr value="@item.BayID" style="color: @(item.Active == false ? "red" : "black")" onclick="edit('@item.BayID','@item.ProductID','@item.Product.ProductName','@item.Active','@item.LastActive','@item.Remarks','@item.Frequency','@item.CurrQueue','@rowV');">
                            <td>
                                @Html.DisplayFor(modelItem => item.BayID)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Product.ProductName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Frequency)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CurrQueue)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Active)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.ModifiedBy)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.ModifiedDate)
                            </td>

                        </tr>
                    }

                </tbody>
            </table>
            <br />
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        </div>
    </div>
    @using (Html.BeginForm("Edit", "Bays", FormMethod.Post,new { @id = "formID"}))
    {
        <br /><br /><br />
        <div class="col-md-6">
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            <div class="form-group ">
                <div class="btn-group col-md-offset-4">
                    @*<button type="button" class="btn btn-primary" disabled>New</button>*@
                    <button type="button" class="btn btn-primary" onclick="clearNew();">New</button>
                    <button type="submit" class="btn btn-primary" onsubmit="return submit();">Save</button>
                    @*<button type="button" class="btn btn-primary" disabled>Delete</button>*@
                </div>
            </div>
            @*@{
                DateTime createdDate;
                try
                {
                    createdDate = Model.FirstOrDefault().CreatedDate;
                }
                catch
                {
                    createdDate = System.DateTime.Now;
                }
                    }*@
            @Html.Hidden("coundID", (object)Convert.ToInt32(ViewBag.ProductCount), new { @id = "coundID" })
            @*@Html.HiddenFor((object)Convert.ToInt32(ViewBag.page_Count), new { @id = "prdId" })*@
            @Html.HiddenFor(m => Model.FirstOrDefault().ProductID, new { @id = "prdId" })
            @Html.HiddenFor(m => Model.FirstOrDefault().Frequency, new { @id = "frequency" })
            @Html.HiddenFor(m => Model.FirstOrDefault().CurrQueue, new { @id = "currQueue" })
            @Html.HiddenFor(model => Model.FirstOrDefault().RowVersion, new { @class = "form-control", @id = "hdnRowVersion" })
            @*@Html.HiddenFor(m => Model.FirstOrDefault().ModifiedDate, new { @Value = System.DateTime.Now })
                @Html.HiddenFor(m => Model.FirstOrDefault().CreatedDate, new { @Value = createdDate })*@
            <div class="form-horizontal">

                <div class="form-group">
                    <label for="bayid" class="col-md-4 control-label">Bay No</label>
                    <div class="col-md-4">
                        @Html.EditorFor(m => Model.FirstOrDefault().BayID, new { htmlAttributes = new { @class = "form-control", @id = "bayid", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="form-group">
                    <label for="prdName" class="col-md-4 control-label">Product Name</label>
                    <div class="col-md-4">
                        @Html.DropDownList("ddlProduct", new SelectList(ViewBag.ProductsDropDown, "Value", "Text"), "Please select", new { @id = "ddlProduct", @class = "form-control" })
                        @*@Html.Hidden("ProductName", Model.FirstOrDefault().Product.ProductID, new { @id = "hfProductName" })*@


                        @*@Html.DropDownList("ddlProduct", (IEnumerable<SelectListItem>)ViewBag.ProductsDropDown,
                            new { id = "ddlLocations", @class = "form-control" })*@

                        @*@Html.DropDownListFor(m => m.FirstOrDefault().Product.ProductID,
                            new SelectList(ViewBag.ProductsDropDown, "Value", "Text", Model.FirstOrDefault().Product.ProductID),
                            new { id = "ddlProduct", @class = "form-control" }
                            )*@
                        @*@Html.EditorFor(m => Model.FirstOrDefault().Product.ProductName, new { htmlAttributes = new { @class = "form-control", @id = "prdName", @readonly = "readonly" } })*@
                    </div>
                </div>
                <div class="form-group">
                    <label for="" class="col-md-4 control-label">Active</label>
                    <div class="col-md-4">
                        @Html.CheckBoxFor(m => Model.FirstOrDefault().Active, new { @id = "active", htmlAttributes = new { @class = "form-control" } })
                        @Html.Label(" Blacklist")
                    </div>
                </div>
                @*<div class="form-group">
                        <label for="lastActive" class="col-md-4 control-label">Last Active</label>
                        <div class="col-md-4">
                            @Html.EditorFor(m => Model.FirstOrDefault().LastActive, new { htmlAttributes = new { @class = "form-control", @id = "lastActive" } })
                            @Html.ValidationMessageFor(m => Model.FirstOrDefault().LastActive, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                @Html.HiddenFor(m => Model.FirstOrDefault().LastActive, new { htmlAttributes = new { @id = "lastActive" } })
                <div class="form-group">
                    <label for="remarks" class="col-md-4 control-label">Remarks</label>
                    <div class="col-md-4">
                        @Html.TextAreaFor(m => Model.FirstOrDefault().Remarks, new { @class = "form-control", @id = "remarks" })
                    </div>
                </div>
            </div>
        </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")
}
<script type="text/javascript">

    $(document).ready(function () {

        document.getElementById('formID').onsubmit = function () {
            return submit();
        };

        $('#ddlProduct').val($("#prdId").val());
        

    });
    //$("body").on("change", "#ddlProduct", function () {
    //    $("#hfProductName").val($(this).find("option:selected").text());
    //});
    function submit() {
        var flag = false;
        if ($('#ddlProduct').val() > 0) {
            flag = true;
        }
        return flag;
    }
    function clearNew() {
        $("#bayid").prop("disabled", false);
        $("#prdName").prop("disabled", false);
        $("#frequency").val("-1")

        $("#bayid").val("")
        $("#prdName").val("")
        document.getElementById("active").checked = true;
        $("#remarks").val("")
        $("#bayid").val($("#coundID").val())
        $("#ddlProduct").val($("#ddlProduct option:first").val());
        //$('#ddlProduct').val(0);
        //$('[name=options]').val(1);


        //document.getElementById("bayid").removeAttribute("readonly");
        //document.getElementById("prdName").removeAttribute("readonly");
        //$("#active").val("")
    }

    $(function () {

        $('#lastActive').datetimepicker({
            controlType: 'select',
            oneLine: true,
            timeFormat: 'hh:mm:ss tt',
            dateFormat: 'mm/dd/yy',
            timeInput: true,
            changeMonth: true,
            changeYear: true,
            yearRange: "-15:+15"
        });
    });
    function edit(id, prdID, prdName, active, lastactive, remarks, freq, queue, RowVersion) {

        $('#bayid').attr('readonly', 'readonly');
        //$('#prdName').attr('readonly', 'readonly');

        //document.getElementById("bayid").attribute("readonly");
        //document.getElementById("prdName").removeAttribute("readonly");

        $("#prdId").val(prdID)
        $("#bayid").val(id)
        //$("#prdName").val(prdName)
        $("#ddlProduct").val(prdID);
        $("#frequency").val(freq)
        $("#currQueue").val(queue)

        if (active == "onclick") {
            $("#active").prop('checked', true);
        }
        else {
            $("#active").prop('checked', false);
        }
        $("#lastActive").val(lastactive)

        $("#remarks").val(remarks)
        $("#hdnRowVersion").val(RowVersion)
    }

</script>







